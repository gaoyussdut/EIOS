#### 开发环境配置
##### Basic
server:
  port: 9090
  tomcat:
    maxHttpHeaderSize: 10240000
    maxHttpPostSize: 10240000
##### Spring
spring:
  application:
    name: business
  jackson:
        # 默认为ALWAYS,non_null属性为null不参加序列化, NON_EMPTY 属性为""或NULL都不序列化
        default-property-inclusion: non_null
  jms:
    listener:
      acknowledge-mode: CLIENT
      max-concurrency: 10
  ### Redis
  redis:
    database: 0
    host: 192.168.1.7
    port: 6379
    password:
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

### postgresql
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://192.168.1.7:15353/EIOS
    username: fp
    password: fp@123

    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    # Oracle请使用select 1 from dual
    validationQuery: SELECT 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    #spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #spring.datasource.useGlobalDataSourceStat=true
  
  ### Data
  data:
    # Cassandra
    cassandra:
      keyspace-name: newfront
      contact-points: 192.168.1.101
      port: 9042
      repositories:
        type: auto
      schema-action: create_if_not_exists
    # Elasticsearch
    elasticsearch:
      cluster-nodes: 192.168.1.7:9300
      # 不加 cluster-name 属性会/home/gaoshize报错:
      #   NoNodeAvailableException[None of the configured nodes are available: [{#transport#-1}{jyzih8cJQj6axOEAERo7ew}{192.168.1.97}{192.168.1.97:9300}]]
      # 其他解决方案暂不清楚
      cluster-name: docker-cluster
      repositories:
        enabled: true

  ### RabbitMQ
  rabbitmq:
    host: 192.168.1.7
    port: 15672
    virtual-host: lizongsheng
    username: lizongsheng
    password: lizongsheng
    connection-timeout: 5000ms
  ### Kafka
  kafka:
    producer:
      retries: 0
      buffer-memory: 40960
      batch-size: 4096
    bootstrap-servers: 192.168.1.163:9092
    consumer:
      group-id: test-group
  ### Activemq
  activemq:
    broker-url: tcp://192.168.1.7:61617
    in-memory: true
    pool:
      enabled: false #如果此处设置为true，需要加如下的依赖包，否则会自动配置失败，报JmsMessagingTemplate注入失败

# 外键服务的url和talend_id
foreign_key_service:
    url: http://localhost:8090
    talend_id: 311b15e2-1513-4ef5-b88c-125cdf1cc48f

##### Log
logging:
  level:
    root: info



