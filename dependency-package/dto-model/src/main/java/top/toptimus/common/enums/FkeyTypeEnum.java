package top.toptimus.common.enums;/** * FKey的类别 */public enum FkeyTypeEnum {    /*    字符串     */    STRING,     // 字符串    MEMO,       // TextArea    IDCARD,     // 身份证    MOBILE,     // 手机号码    EMAIL,      // 邮箱    /*        时间     */    DATE,       // 日期    TIMESTAMP,  // 时间    /**     * 下拉类型，TODO，这部分最复杂     */    SELECT,    SELECT_INTERN,    MULTI_SELECT,   //  多选SELECT    /*        浮点数     */    DECIMAL,    // 浮点数字    CURRENCY,   // 金额    FILE,    IMAGE,    INTEGER,    CODE,    BOOLEAN,    CONSTANT,    MULTI_CONSTANT;    /**     * 判断fkeyType是否为基础类型     */    public Boolean isBaseFkeyType() {        for (FkeyBaseTypeEnum fkeyBaseTypeEnum : FkeyBaseTypeEnum.values()) {            if (this.name().equals(fkeyBaseTypeEnum.name())) {                return true;            }        }        return false;    }    /**     * 取得数据的基础类型     *     * @return 基础的Fkey     */    public FkeyBaseTypeEnum getBaseFkey() {        switch (this) {            case SELECT:                return FkeyBaseTypeEnum.SELECT;            case STRING:            case MEMO:            case EMAIL:            case MOBILE:            case IDCARD:                return FkeyBaseTypeEnum.STRING;            case DATE:            case TIMESTAMP:                return FkeyBaseTypeEnum.DATE;            case BOOLEAN:                return FkeyBaseTypeEnum.BOOLEAN;            case DECIMAL:            case CURRENCY:                return FkeyBaseTypeEnum.DECIMAL;            case INTEGER:                return FkeyBaseTypeEnum.INTEGER;            case CODE:                return FkeyBaseTypeEnum.CODE;            case FILE:            case IMAGE:                return FkeyBaseTypeEnum.FILE;            case CONSTANT:            case MULTI_CONSTANT:                return FkeyBaseTypeEnum.CONSTANT;            default://                return FkeyBaseTypeEnum.STRING;                throw new RuntimeException("类型未定义");        }    }}